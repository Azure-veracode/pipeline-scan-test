trigger:
- main

pool:
  vmImage: 'ubuntu-latest'


steps:

- task: Bash@3
  displayName: 'Install Veracode CLI and Package Scan'
  inputs:
    targetType: 'inline'
    script: |
      curl -fsS https://tools.veracode.com/veracode-cli/install | sh
      ./veracode package -das $(Build.SourcesDirectory) --output ./verascan

      # Check if the verascan directory exists
      if [ ! -d "verascan" ]; then
        echo "Error: verascan directory not found."
        exit 1
      fi

- task: PublishBuildArtifacts@1
  displayName: 'Publish Verascan Artifact'
  inputs:
    pathToPublish: 'verascan'
    artifactName: 'VeracodeScanResults'

- task: VeracodePipelineScan@0
  inputs:
    serviceConnection: 'Veracode-Arun-GM'
    fileToScan: 'verascan'
    policyName: 'Al-Test'


# - task: VeracodePipelineScan@0
#   inputs:
#     authenticationMethod: 'UsernamePassword'
#     fileToScan: '$(Pipeline.Workspace)/$(Build.BuildId).zip'
#     policyName: 'test policy'
#     breakPipeline: true
     



# Step 5: Scan the ZIP File with Veracode
# - task: CmdLine@2
#   displayName: Veracode Pipeline Scan
#   inputs:
#     script: |
#       curl -sSO https://downloads.veracode.com/securityscan/pipeline-scan-LATEST.zip
#       unzip -o pipeline-scan-LATEST.zip
#       java -jar pipeline-scan.jar -vid 'f53289447dc774d0ef0987a3ee1545ea' -vkey '2d19d36158beb63d5f7305ac9078b07c08013cc408036b2dffd52049d0a3998eb9ca329c2e0cc3b2235b5e2e822834bf8233e44c58404f63b5701a68e8b9f53f' -f $(Pipeline.Workspace)/$(Build.BuildId).zip